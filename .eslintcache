[{"D:\\nwitter\\src\\index.js":"1","D:\\nwitter\\src\\components\\App.js":"2","D:\\nwitter\\src\\components\\Router.js":"3","D:\\nwitter\\src\\routes\\Auth.js":"4","D:\\nwitter\\src\\routes\\Home.js":"5","D:\\nwitter\\src\\fbase.js":"6","D:\\nwitter\\src\\components\\Navigation.js":"7","D:\\nwitter\\src\\routes\\Profile.js":"8","D:\\nwitter\\src\\components\\Nweet.js":"9","D:\\nwitter\\src\\components\\NweetFactory.js":"10","D:\\nwitter\\src\\components\\AuthForm.js":"11"},{"size":207,"mtime":1608532327696,"results":"12","hashOfConfig":"13"},{"size":1386,"mtime":1608979773018,"results":"14","hashOfConfig":"13"},{"size":1220,"mtime":1608801852411,"results":"15","hashOfConfig":"13"},{"size":968,"mtime":1608977759885,"results":"16","hashOfConfig":"13"},{"size":990,"mtime":1608970461644,"results":"17","hashOfConfig":"13"},{"size":690,"mtime":1608716197391,"results":"18","hashOfConfig":"13"},{"size":390,"mtime":1608799807274,"results":"19","hashOfConfig":"13"},{"size":1275,"mtime":1608979744484,"results":"20","hashOfConfig":"13"},{"size":2432,"mtime":1608907143923,"results":"21","hashOfConfig":"13"},{"size":2362,"mtime":1608907685175,"results":"22","hashOfConfig":"13"},{"size":2236,"mtime":1608977754511,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ahrfn8",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\nwitter\\src\\index.js",[],["49","50"],"D:\\nwitter\\src\\components\\App.js",[],"D:\\nwitter\\src\\components\\Router.js",[],"D:\\nwitter\\src\\routes\\Auth.js",[],"D:\\nwitter\\src\\routes\\Home.js",[],"D:\\nwitter\\src\\fbase.js",[],"D:\\nwitter\\src\\components\\Navigation.js",[],"D:\\nwitter\\src\\routes\\Profile.js",["51"],"D:\\nwitter\\src\\components\\Nweet.js",["52"],"import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\r\n            \"Are you sure you want to delete this nweet?\"\r\n        );\r\n        console.log(ok);\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            onChange={onChange}\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" />\r\n                    </form>\r\n                    <button onClick={toggleEditing}>Cancel</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h4>{nweetObj.text}</h4>\r\n                    {nweetObj.attachmentUrl && (\r\n                        <img\r\n                            src={nweetObj.attachmentUrl}\r\n                            width=\"50px\"\r\n                            height=\"50px\"\r\n                        />\r\n                    )}\r\n                    {isOwner && (\r\n                        <>\r\n                            <button onClick={onDeleteClick}>\r\n                                Delete Nweet\r\n                            </button>\r\n                            <button onClick={toggleEditing}>Edit Nweet</button>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;\r\n","D:\\nwitter\\src\\components\\NweetFactory.js",["53"],"import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(\r\n                attachment,\r\n                \"data_url\"\r\n            );\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorID: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n    const onClearAttachment = () => setAttachment(null);\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <input\r\n                value={nweet}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                placeholder=\"What's on your mind?\"\r\n                maxLength={120}\r\n            />\r\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n            <input type=\"submit\" value=\"Nweet\" />\r\n            {attachment && (\r\n                <div>\r\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\r\n                    <button onClick={onClearAttachment}>Clear</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFactory;\r\n","D:\\nwitter\\src\\components\\AuthForm.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":5,"column":1,"nodeType":"60","endLine":42,"endColumn":3},{"ruleId":"61","severity":1,"message":"62","line":52,"column":25,"nodeType":"63","endLine":56,"endColumn":27},{"ruleId":"61","severity":1,"message":"62","line":66,"column":21,"nodeType":"63","endLine":66,"endColumn":72},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]